{"version":3,"sources":["Logic.js","Output.js","App.js","serviceWorker.js","index.js"],"names":["binaryToDecimal","value","binary","length","sum","i","Math","pow","console","log","decimalToHex","decimal","result","remainder","floor","parseInt","convertToLetter","hexToDecimal","convertToNumber","decimalToBinary","number","toString","toUpperCase","Output","props","string","doMath","outputType","input","inputType","react_default","a","createElement","className","type","placeholder","onChange","event","handleChange","target","charAt","slice","output","unshift","j","replace","twoComplement","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","e","setState","toLowerCase","state","_this2","map","category","key","onClick","href","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d6ed3a85.chunk.js","sourcesContent":["export const binaryToDecimal = (value) => {\n    \n    let binary = value;\n    let length = binary.length - 1;\n    let sum = 0;\n    for (let i = length; i >= 0; i--) {\n      binary[i] == 1 ? (sum += Math.pow(2, length - i)) : console.log(\"skip\");\n    }\n    return sum;\n  }\n\nexport const decimalToHex = (value) => {\n\n    let decimal = value;\n    let result = \"\";\n    let remainder = 0;\n    console.log(decimal);\n    while (decimal > 16) {\n      remainder = decimal % 16;\n      if (remainder != 0) {\n        decimal = Math.floor(parseInt(decimal) / 16);\n        result = convertToLetter(remainder) + result;\n      }\n      Math.floor(parseInt(decimal) / 16);\n    }\n    if (parseInt(decimal) > 9) {\n      decimal = convertToLetter(decimal);\n    }\n    result = decimal + result;\n    return result;\n  }\n\n  export const hexToDecimal = (value) => {\n    let length = value.length - 1;\n    let sum = 0;\n    for (let i = length; i >= 0; i--) {\n      sum += convertToNumber(value[i]) * Math.pow(16, length - i);\n    }\n    return sum;\n  }\n\n  export const decimalToBinary = (value) => {\n      let decimal = value;\n      let binary = \"\";\n      while (decimal > 0) {\n        if (decimal % 2 == 0){\n            decimal/=2;\n            binary = \"0\" + binary;\n        } else {\n            decimal = Math.floor(decimal/2)\n            binary = \"1\" + binary;\n      }\n  }return binary;\n}\n\n  const convertToLetter = (number) => {\n    switch (number) {\n      case 10:\n        return \"A\";\n      case 11:\n        return \"B\";\n      case 12:\n        return \"C\";\n      case 13:\n        return \"D\";\n      case 14:\n        return \"E\";\n      case 15:\n        return \"F\";\n      default:\n        return number;\n    }\n  }\n\n  const convertToNumber = (number) => {\n    let letter = number.toString().toUpperCase();\n    switch (letter) {\n      case \"A\":\n        return 10;\n      case \"B\":\n        return 11;\n      case \"C\":\n        return 12;\n      case \"D\":\n        return 13;\n      case \"E\":\n        return 14;\n      case \"F\":\n        return 15;\n      default:\n        return number;\n    }\n}\n","/* eslint-disable default-case */\nimport React from \"react\";\nimport {\n  binaryToDecimal,\n  decimalToHex,\n  hexToDecimal,\n  decimalToBinary\n} from \"./Logic.js\";\n\nexport default function Output(props) {\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const twoComplement = () => {\n    if (props.input == \"\") return 0;\n    let input = props.input;\n    let type = props.inputType;\n    if (type == \"hex\") input = decimalToBinary(hexToDecimal(input));\n    let length = input.length - 1;\n    let output = [];\n\n    for (let i = length; i >= 0; i--) {\n      input[i] == 0 ? output.unshift(1) : output.unshift(0);\n    }\n    for (let j = length; j >= 0; j--) {\n      if (output[j] == 0) {\n        output[j] = 1;\n        if (type == 'hex') output = decimalToHex(binaryToDecimal(output));\n        return output.toString().replace(/,/g, \"\");\n      } else {\n        output[j] = 0;\n      }\n    }\n    if (type == 'hex') output = decimalToHex(binaryToDecimal(output));\n    return output.toString().replace(/,/g, \"\");\n  };\n\n  const doMath = outputType => {\n    if (props.input == \"\") return 0;\n\n    if (props.inputType === \"binary\") {\n      switch (outputType) {\n        case \"binary\":\n          return props.input;\n        case \"decimal\":\n          return binaryToDecimal(props.input);\n        case \"hex\":\n          return decimalToHex(binaryToDecimal(props.input));\n        default:\n          break;\n      }\n    } else if (props.inputType === \"decimal\") {\n      switch (outputType) {\n        case \"binary\":\n          return decimalToBinary(props.input);\n        case \"decimal\":\n          return props.input;\n        case \"hex\":\n          return hexToDecimal(props.input);\n      }\n    } else if (props.inputType === \"hex\") {\n      switch (outputType) {\n        case \"binary\":\n          return decimalToBinary(hexToDecimal(props.input));\n        case \"decimal\":\n          return hexToDecimal(props.input);\n        case \"hex\":\n          return props.input;\n      }\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <input\n          type=\"text\"\n          value={props.input}\n          className=\"form-control m-3\"\n          placeholder={\"Enter a \" + props.inputType + \" value\"}\n          onChange={event => props.handleChange(event.target.value)}\n        />\n      </div>\n      <div className=\"card shadow-sm\">\n        <div className=\"card-header\">Binary Value</div>\n        <div className=\"card-body\">{doMath(\"binary\")}</div>\n      </div>\n      <br />\n      <div className=\"card shadow-sm\">\n        <div className=\"card-header\">Decimal Value</div>\n        <div className=\"card-body\">{doMath(\"decimal\")}</div>\n      </div>\n      <br />\n      <div className=\"card shadow-sm\">\n        <div className=\"card-header\">Hex Value</div>\n        <div className=\"card-body\">{doMath(\"hex\")}</div>\n      </div>\n      <br />\n      <div className=\"card shadow-sm\">\n        <div className=\"card-header\">\n          2's Complement of {capitalizeFirstLetter(props.inputType)} Value\n        </div>\n        <div className=\"card-body\">{twoComplement()}</div>\n      </div>\n      <br />\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component } from \"react\";\nimport \"./index.css\";\nimport Output from \"./Output.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputType: \"binary\",\n      input: \"\"\n    };\n  }\n\n  handleClick = e => {\n    console.log(e)\n    this.setState({inputType: e.target.value.toLowerCase()})\n  };\n\n  handleChange = input => {\n    this.setState({input: input})\n  }\n\n  render() {\n    const categories = [\"Binary\", \"Decimal\", \"Hex\"];\n    return (\n      <div className=\"container text-align-center\">\n        <div className=\"card text-center m-2 shadow\">\n          <div className=\"card-header container\">\n            <h3>Binary, Decimal, and Hex Conversion Tool</h3>\n            <ul className=\"nav nav-tabs card-header-tabs col\">\n              {categories.map(category => {\n                return (\n                  <li key={category} className=\"nav-item\">\n                    <button\n                      value={category}\n                      className={\n                        category.toLowerCase() == this.state.inputType\n                          ? \"nav-link btn btn-link active\"\n                          : \"nav-link btn btn-link\"\n                      }\n                      onClick={(e) => this.handleClick(e)}\n                    >\n                      {category}\n                    </button>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n          <div className=\"card-body\">\n          <Output input={this.state.input} inputType={this.state.inputType} outputType={this.state.outputType} handleChange={this.handleChange}/>\n        </div>\n        <div className=\"card-header\">\n          <a href=\"https://github.com/notbrad/converter\" target=\"blank\"><div className=\"text-right\">Github Link</div></a>\n          <div className=\"text-right\">Made by Brad Vatne</div>\n        </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();"],"sourceRoot":""}